{"version":3,"sources":["Route.ts","api.ts","utils.ts","atom.ts","Routes/Tv.tsx","Routes/Search.tsx","Routes/Movies.tsx","Components/Header.tsx","GlobalStyle.ts","App.tsx","index.tsx","theme.ts"],"names":["route","API_KEY","BASE_URL","getMovies","info","fetch","pageParam","then","response","json","getTopRatedMovies","getMovieDetail","movieId","getPopularTv","getTopTv","DEFAULT_IMG","makeImagePath","id","format","isDetail","atom","key","default","GlobalSearchClose","Wrapper","styled","div","Loader","motion","Banner","props","bgPhoto","Title","h2","OverView","p","Slider","SliderTitle","Next","Row","Box","MovieImg","img","Info","theme","black","darker","Overlay","BigMovieDetail","lighter","BigCover","DetailInfo","white","DetailHeader","DetailTitle","h3","Tagline","DetailBody","tagline","DetailPoster","DetailSection","MovieTitle","MovieVote","rowVariants","hidden","back","x","window","innerWidth","visible","exit","boxVariants","normal","scale","hover","y","transition","delay","duration","type","movieImgVariants","borderBottomLeftRadius","borderBottomRightRadius","infoVariants","opacity","Tv","history","useHistory","bigTvMatch","useRouteMatch","scrollY","useViewportScroll","useQuery","data","isLoading","topData","topLoading","params","tvId","a","enabled","refetchOnWindowFocus","detailData","detailLoading","refetch","useEffect","useState","index","setIndex","topIndex","setTopIndex","leaving","setLeaving","setBack","setDetail","useSetRecoilState","toggleLeaving","prev","onBoxClicked","push","setTimeout","results","backdrop_path","name","overview","AnimatePresence","onExitComplete","initial","custom","variants","animate","slice","map","movie","layoutId","whileHover","onClick","src","icon","size","color","vote_average","totalMovies","length","maxIndex","Math","floor","style","top","get","backgroundImage","Boolean","poster_path","href","homepage","target","rel","genres","genre","first_air_date","episode_run_time","time","Search","location","useLocation","bigMovieMatch","keyword","URLSearchParams","search","query","movieData","movieLoading","tvData","tvLoading","console","log","total_results","title","release_date","runtime","status","Prev","Movies","useInfiniteQuery","getNextPageParam","currentPage","nextPage","page","total_pages","hasNextPage","fetchNextPage","topHasNextPage","topFetchNextPage","pages","flat","ease","Nav","nav","Column","Logo","svg","red","Items","ul","Item","li","form","Circle","span","Input","input","logoVariants","fill","active","pathLength","navVariants","backgroundColor","scroll","Header","searchOpen","setSearchOpen","useRecoilState","globalSearchClose","setGlobalSearchClose","homeMatch","tvMatch","inputAnimation","useAnimation","navAnimation","useForm","register","setValue","handleSubmit","setFocus","start","scaleX","onChange","to","xmlns","width","height","viewBox","path","d","isExact","onSubmit","fillRule","clipRule","required","minLength","value","message","placeholder","GlobalStyle","createGlobalStyle","detail","library","add","fas","Container","App","useRecoilValue","setCloseSearch","client","QueryClient","ReactDOM","render","StrictMode","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.a0f822dd.chunk.js","sourcesContent":["export const route = {\n  home: \"/maxflix-remaster/\",\n  tv: \"/maxflix-remaster/tv\",\n  search: \"/maxflix-remaster/search\",\n  movieDetail: \"/maxflix-remaster/movies/:movieId\",\n  tvDetail: \"/maxflix-remaster/tv/:tvId\",\n  searchDetail: \"/maxflix-remaster/search/:keywordId\",\n};\n","const API_KEY = \"83e4562556a8e370915aa2a360e7d4db\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\ninterface IMovie {\n  backdrop_path: string;\n  id: number;\n  overview: string;\n  poster_path: string;\n  vote_average: number;\n  vote_count: number;\n  name?: string;\n  title?: string;\n  release_date?: Date;\n  first_air_date?: Date;\n}\n\nexport interface IGetMovieResult {\n  dates?: {\n    maximum: string;\n    minimum: string;\n  };\n  page: number;\n  results: IMovie[];\n  total_pages: number;\n  total_results: number;\n}\n\ninterface IGenre {\n  id: number;\n  name: string;\n}\n\nexport interface IGetMovieDetailResult {\n  backdrop_path: string;\n  genres: IGenre[];\n  homepage: string;\n  id: number;\n  imdb_id: string;\n  overview: string;\n  poster_path: string;\n  release_date: Date;\n  runtime: number;\n  status: string;\n  vote_average: number;\n  vote_count: number;\n  tagline: string;\n  name?: string;\n  title?: string;\n}\n\ninterface ISeason {\n  air_date: Date;\n  episode_count: number;\n  id: number;\n  name: string;\n}\n\nexport interface IGetTvDetailResult {\n  backdrop_path: string;\n  episode_run_time: number[];\n  first_air_date: Date;\n  genres: IGenre[];\n  homepage: string;\n  id: number;\n  in_production: boolean;\n  languages: string[];\n  last_air_date: Date;\n  name: string;\n  number_of_episodes: number;\n  number_of_seasons: number;\n  origin_country: string[];\n  original_language: string;\n  overview: string;\n  poster_path: string;\n  seasons: ISeason[];\n  tagline: string;\n  type: string;\n  vote_average: number;\n  vote_count: number;\n}\n\nexport const getMovies = (info: any) => {\n  return fetch(\n    `${BASE_URL}/movie/now_playing?api_key=${API_KEY}&language=ko-KR&page=${\n      info.pageParam ?? 1\n    }&region=KR`\n  ).then((response) => response.json());\n};\n\nexport const getTopRatedMovies = (info: any) => {\n  return fetch(\n    `${BASE_URL}/movie/top_rated?api_key=${API_KEY}&language=ko-KR&page=${\n      info.pageParam ?? 1\n    }&region=KR`\n  ).then((response) => response.json());\n};\n\nexport const getPopularMovies = () => {\n  return fetch(\n    `${BASE_URL}/movie/popular?api_key=${API_KEY}&language=ko-KR&page=1&region=KR`\n  ).then((response) => response.json());\n};\n\nexport const getMovieDetail = (movieId: string) => {\n  return fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=ko-KR&append_to_response=KR`\n  ).then((response) => response.json());\n};\n\nexport const getPopularTv = () => {\n  return fetch(\n    `${BASE_URL}/tv/popular?api_key=${API_KEY}&language=ko-KR&page=1&region=KR`\n  ).then((response) => response.json());\n};\n\nexport const getTopTv = () => {\n  return fetch(\n    `${BASE_URL}/tv/top_rated?api_key=${API_KEY}&language=ko-KR&page=1&region=KR`\n  ).then((response) => response.json());\n};\n\nexport const getTvDetail = (tvId: string) => {\n  return fetch(\n    `${BASE_URL}/tv/${tvId}?api_key=${API_KEY}&language=ko-KR&append_to_response=KR`\n  ).then((response) => response.json());\n};\n\nexport const DEFAULT_IMG =\n  \"https://images.unsplash.com/photo-1489599849927-2ee91cede3ba?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2340&q=80\";\n\nexport const searchMovie = (query: string) => {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=ko-KR&query=${query}&page=1&region=KR`\n  ).then((response) => response.json());\n};\n\nexport const searchTv = (query: string) => {\n  return fetch(\n    `${BASE_URL}/search/tv?api_key=${API_KEY}&language=ko-KR&query=${query}&page=1&region=KR`\n  ).then((response) => response.json());\n};\n","export const makeImagePath = (id: string, format = \"original\") => {\n  return `https://image.tmdb.org/t/p/${format}${id}`;\n};\n","import { atom } from \"recoil\";\n\nexport const isDetail = atom({\n  key: \"movieDetail\",\n  default: false,\n});\n\nexport const GlobalSearchClose = atom({\n  key: \"searchClose\",\n  default: false,\n});\n","import { useQuery } from \"react-query\";\nimport { IGetMovieResult, getTvDetail } from \"../api\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { makeImagePath } from \"../utils\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { route } from \"../Route\";\nimport { useSetRecoilState } from \"recoil\";\nimport { isDetail } from \"../atom\";\nimport {\n  DEFAULT_IMG,\n  getPopularTv,\n  getTopTv,\n  IGetTvDetailResult,\n} from \"../api\";\n\nconst Wrapper = styled.div`\n  background-color: black;\n`;\n\nconst Loader = styled(motion.div)`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 4rem;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 5rem;\n  margin-bottom: 2rem;\n`;\n\nconst OverView = styled.p`\n  font-size: 1.5rem;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: -9.3rem;\n  margin-bottom: 15rem;\n`;\n\nconst SliderTitle = styled.div`\n  margin-bottom: 2rem;\n  margin-left: 4rem;\n  font-size: 1.5rem;\n`;\n\n// const Prev = styled(motion.div)`\n//   height: 80%;\n//   cursor: pointer;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   opacity: 0.3;\n//   position: absolute;\n//   z-index: 10;\n//   left: 1rem;\n//   top: 4rem;\n// `;\n\nconst Next = styled(motion.div)`\n  height: 80%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0.3;\n  position: absolute;\n  right: 1rem;\n  top: 7rem;\n  background-color: rgba(0, 0, 0, 1);\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 0.5rem;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n  padding: 0 4rem;\n`;\n\nconst Box = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst MovieImg = styled(motion.img)`\n  border-radius: 0.5rem;\n  width: 100%;\n`;\n\nconst Info = styled(motion.div)`\n  background-color: ${(props) => props.theme.black.darker};\n  opacity: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  box-shadow: 0px 2px 25px rgba(0, 0, 0, 0.5);\n  border-bottom-left-radius: 0.5rem;\n  border-bottom-right-radius: 0.5rem;\n  padding: 1rem;\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovieDetail = styled(motion.div)`\n  position: absolute;\n  border-radius: 1rem;\n  overflow: hidden;\n  width: 40vw;\n  height: 90vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  height: 35%;\n  background-size: cover;\n  background-position: center center;\n`;\n\nconst DetailInfo = styled.div`\n  color: ${(props) => props.theme.white.lighter};\n  position: relative;\n  top: -5.5rem;\n  padding: 1.5rem 1.5rem 0 1.5rem;\n`;\n\nconst DetailHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n\nconst DetailTitle = styled.h3`\n  font-size: 2rem;\n  width: 60%;\n`;\n\nconst Tagline = styled.div`\n  width: 40%;\n`;\nconst DetailBody = styled.div<{ tagline: boolean }>`\n  padding-top: ${(props) => (props.tagline ? \"1.5rem\" : \"2rem\")};\n  display: grid;\n  height: 100%;\n  grid-template-columns: repeat(2, 1fr);\n`;\n\nconst DetailPoster = styled.div`\n  border-radius: 1rem;\n  height: 30rem;\n  background-position: center;\n  background-size: cover;\n`;\n\nconst DetailSection = styled.div`\n  padding: 1.5rem;\n`;\n\nconst MovieTitle = styled.div``;\nconst MovieVote = styled.div`\n  width: 3rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst rowVariants = {\n  hidden: (back: boolean) => ({\n    x: back ? -window.innerWidth : window.innerWidth,\n  }),\n  visible: {\n    x: 0,\n  },\n  exit: (back: boolean) => ({\n    x: back ? window.innerWidth : -window.innerWidth,\n  }),\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.5,\n    y: -50,\n    transition: {\n      delay: 0.3,\n      duration: 0.2,\n      type: \"tween\",\n    },\n  },\n};\n\nconst movieImgVariants = {\n  hover: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    transition: {\n      delay: 0.3,\n      duration: 0.2,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.3,\n      duration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst offset = 6;\n\nexport const Tv = () => {\n  const history = useHistory();\n  const bigTvMatch = useRouteMatch<{ tvId: string }>(route.tvDetail);\n  const { scrollY } = useViewportScroll();\n  const { data, isLoading } = useQuery<IGetMovieResult>(\n    [\"tv\", \"popular\"],\n    getPopularTv\n  );\n\n  const { data: topData, isLoading: topLoading } = useQuery<IGetMovieResult>(\n    [\"tv\", \"top-rated\"],\n    getTopTv\n  );\n\n  const {\n    data: detailData,\n    isLoading: detailLoading,\n    refetch,\n  } = useQuery<IGetTvDetailResult>(\n    [\"tv\", bigTvMatch?.params.tvId],\n    async () => bigTvMatch && getTvDetail(bigTvMatch?.params.tvId),\n    {\n      enabled: false,\n      refetchOnWindowFocus: false,\n    }\n  );\n\n  useEffect(() => {\n    if (bigTvMatch?.params.tvId) {\n      refetch();\n    }\n  }, [bigTvMatch?.params.tvId, refetch]);\n\n  const [index, setIndex] = useState(0);\n  const [topIndex, setTopIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const [back, setBack] = useState(false);\n  const setDetail = useSetRecoilState(isDetail);\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n\n  const increaseIndex = () => {\n    if (data) {\n      if (leaving) return;\n      setBack(false);\n      toggleLeaving();\n      const totalMovies = data.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n\n  const increaseTopIndex = () => {\n    if (topData) {\n      if (leaving) return;\n      setBack(false);\n      toggleLeaving();\n      const totalMovies = topData.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setTopIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n\n  // const decreaseIndex = () => {\n  //   if (data) {\n  //     if (leaving) return;\n  //     setBack(true);\n  //     toggleLeaving();\n  //     const totalMovies = data.results.length - 1;\n  //     const maxIndex = Math.floor(totalMovies / offset) - 1; // 3\n  //     setIndex((prev) => (prev > 0 ? prev - 1 : maxIndex));\n  //   }\n  // };\n\n  const onBoxClicked = (tvId: number) => {\n    history.push(`/maxflix-remaster/tv/${tvId}`);\n    setTimeout(() => setDetail(true), 500); // setDetail 실행 시 애니메이션 효과가 이상해짐\n  };\n\n  const onOverlayClick = () => {\n    history.push(route.tv);\n    setDetail(false);\n  };\n\n  return (\n    <Wrapper>\n      {isLoading && topLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner bgPhoto={makeImagePath(data?.results[0].backdrop_path || \"\")}>\n            <Title>{data?.results[0].name}</Title>\n            <OverView>{data?.results[0].overview}</OverView>\n          </Banner>\n          <Slider>\n            <SliderTitle>Popular TV</SliderTitle>\n            {/* <Prev whileHover={{ opacity: 1 }} onClick={decreaseIndex}>\n              <FontAwesomeIcon icon={[\"fas\", \"chevron-left\"]} size=\"2x\" />\n            </Prev> */}\n            <AnimatePresence onExitComplete={toggleLeaving} initial={false}>\n              <Row\n                custom={back}\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {data?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + \"\"}\n                      key={movie.id}\n                      variants={boxVariants}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      transition={{ type: \"tween\" }}\n                      onClick={() => onBoxClicked(movie.id)}\n                    >\n                      <MovieImg\n                        variants={movieImgVariants}\n                        src={makeImagePath(movie.backdrop_path, \"w500\")}\n                      />\n\n                      <Info variants={infoVariants}>\n                        <MovieTitle>{movie.name}</MovieTitle>\n                        <MovieVote>\n                          <FontAwesomeIcon\n                            icon={[\"fas\", \"star\"]}\n                            size=\"xs\"\n                            color=\"orange\"\n                          />\n                          <div>{movie.vote_average}</div>\n                        </MovieVote>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <Next whileHover={{ opacity: 1 }} onClick={increaseIndex}>\n              <FontAwesomeIcon icon={[\"fas\", \"chevron-right\"]} size=\"2x\" />\n            </Next>\n          </Slider>\n\n          <Slider>\n            <SliderTitle>Top Rated</SliderTitle>\n            <AnimatePresence onExitComplete={toggleLeaving} initial={false}>\n              <Row\n                custom={back}\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={topIndex}\n              >\n                {topData?.results\n                  .slice(offset * topIndex, offset * topIndex + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + \"\"}\n                      key={movie.id}\n                      variants={boxVariants}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      transition={{ type: \"tween\" }}\n                      onClick={() => onBoxClicked(movie.id)}\n                    >\n                      <MovieImg\n                        variants={movieImgVariants}\n                        src={\n                          movie.backdrop_path\n                            ? makeImagePath(movie.backdrop_path, \"w500\")\n                            : DEFAULT_IMG\n                        }\n                      />\n\n                      <Info variants={infoVariants}>\n                        <MovieTitle>{movie.name}</MovieTitle>\n                        <MovieVote>\n                          <FontAwesomeIcon\n                            icon={[\"fas\", \"star\"]}\n                            size=\"xs\"\n                            color=\"orange\"\n                          />\n                          <div>{movie.vote_average}</div>\n                        </MovieVote>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <Next whileHover={{ opacity: 1 }} onClick={increaseTopIndex}>\n              <FontAwesomeIcon icon={[\"fas\", \"chevron-right\"]} size=\"2x\" />\n            </Next>\n          </Slider>\n\n          <AnimatePresence>\n            {detailLoading ? (\n              <Loader>Loading...</Loader>\n            ) : (\n              bigTvMatch && (\n                <>\n                  <Overlay\n                    onClick={onOverlayClick}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                  />\n                  <BigMovieDetail\n                    style={{ top: scrollY.get() + 50 }}\n                    layoutId={bigTvMatch.params.tvId}\n                  >\n                    {detailData && (\n                      <>\n                        <BigCover\n                          style={{\n                            backgroundImage: `linear-gradient(transparent, black), url(${\n                              detailData.backdrop_path\n                                ? makeImagePath(detailData.backdrop_path)\n                                : DEFAULT_IMG\n                            })`,\n                          }}\n                        ></BigCover>\n                        <DetailInfo>\n                          <DetailHeader>\n                            <DetailTitle>{detailData.name}</DetailTitle>\n                            <Tagline>{detailData.tagline}</Tagline>\n                          </DetailHeader>\n                          <DetailBody tagline={Boolean(detailData.tagline)}>\n                            <DetailPoster\n                              style={{\n                                backgroundImage: `url(${makeImagePath(\n                                  detailData.poster_path\n                                )})`,\n                              }}\n                            />\n                            <DetailSection>\n                              <div>{detailData.overview}</div>\n                              <a\n                                href={`${detailData.homepage}`}\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                              >\n                                {detailData.homepage}\n                              </a>\n                              <div>\n                                장르 :{\" \"}\n                                {detailData.genres.map((genre) => (\n                                  <span>{genre.name} </span>\n                                ))}\n                              </div>\n                              <div>\n                                첫 방영 일자 : {detailData.first_air_date}\n                              </div>\n                              <div>\n                                방영 시간 :{\" \"}\n                                {detailData.episode_run_time.map((time) => (\n                                  <span>{time} 분</span>\n                                ))}\n                              </div>\n                            </DetailSection>\n                          </DetailBody>\n                        </DetailInfo>\n                      </>\n                    )}\n                  </BigMovieDetail>\n                </>\n              )\n            )}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n","import { useQuery } from \"react-query\";\nimport { IGetMovieResult, getMovieDetail, IGetMovieDetailResult } from \"../api\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { makeImagePath } from \"../utils\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { route } from \"../Route\";\nimport { useSetRecoilState } from \"recoil\";\nimport { isDetail } from \"../atom\";\nimport { DEFAULT_IMG, searchMovie, searchTv } from \"../api\";\nimport { useLocation } from \"react-router\";\n\nconst Wrapper = styled.div`\n  background-color: black;\n`;\n\nconst Loader = styled(motion.div)`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 4rem;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 5rem;\n  margin-bottom: 2rem;\n`;\n\nconst OverView = styled.p`\n  font-size: 1.5rem;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: -9.3rem;\n  margin-bottom: 15rem;\n`;\n\nconst SliderTitle = styled.div`\n  margin-bottom: 2rem;\n  margin-left: 4rem;\n  font-size: 1.5rem;\n`;\n\nconst Next = styled(motion.div)`\n  height: 80%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0.3;\n  position: absolute;\n  right: 1rem;\n  top: 7rem;\n  background-color: rgba(0, 0, 0, 1);\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 0.5rem;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n  padding: 0 4rem;\n`;\n\nconst Box = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst MovieImg = styled(motion.img)`\n  border-radius: 0.5rem;\n  width: 100%;\n`;\n\nconst Info = styled(motion.div)`\n  background-color: ${(props) => props.theme.black.darker};\n  opacity: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  box-shadow: 0px 2px 25px rgba(0, 0, 0, 0.5);\n  border-bottom-left-radius: 0.5rem;\n  border-bottom-right-radius: 0.5rem;\n  padding: 1rem;\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovieDetail = styled(motion.div)`\n  position: absolute;\n  border-radius: 1rem;\n  overflow: hidden;\n  width: 40vw;\n  height: 90vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  height: 35%;\n  background-size: cover;\n  background-position: center center;\n`;\n\nconst DetailInfo = styled.div`\n  color: ${(props) => props.theme.white.lighter};\n  position: relative;\n  top: -5.5rem;\n  padding: 1.5rem 1.5rem 0 1.5rem;\n`;\n\nconst DetailHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n\nconst DetailTitle = styled.h3`\n  font-size: 2rem;\n  width: 60%;\n`;\n\nconst Tagline = styled.div`\n  width: 40%;\n`;\nconst DetailBody = styled.div<{ tagline: boolean }>`\n  padding-top: ${(props) => (props.tagline ? \"1.5rem\" : \"2rem\")};\n  display: grid;\n  height: 100%;\n  grid-template-columns: repeat(2, 1fr);\n`;\n\nconst DetailPoster = styled.div`\n  border-radius: 1rem;\n  height: 30rem;\n  background-position: center;\n  background-size: cover;\n`;\n\nconst DetailSection = styled.div`\n  padding: 1.5rem;\n`;\n\nconst MovieTitle = styled.div``;\nconst MovieVote = styled.div`\n  width: 3rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst rowVariants = {\n  hidden: (back: boolean) => ({\n    x: back ? -window.innerWidth : window.innerWidth,\n  }),\n  visible: {\n    x: 0,\n  },\n  exit: (back: boolean) => ({\n    x: back ? window.innerWidth : -window.innerWidth,\n  }),\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.5,\n    y: -50,\n    transition: {\n      delay: 0.3,\n      duration: 0.2,\n      type: \"tween\",\n    },\n  },\n};\n\nconst movieImgVariants = {\n  hover: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    transition: {\n      delay: 0.3,\n      duration: 0.2,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.3,\n      duration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst offset = 6;\n\nexport const Search = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(route.movieDetail);\n  const { scrollY } = useViewportScroll();\n  const keyword = new URLSearchParams(location.search).get(\"keyword\");\n\n  const { data: movieData, isLoading: movieLoading } =\n    useQuery<IGetMovieResult>(\n      [\"movies\", keyword],\n      async () => keyword && searchMovie(keyword)\n    );\n  const { data: tvData, isLoading: tvLoading } = useQuery<IGetMovieResult>(\n    [\"tv\", keyword],\n    async () => keyword && searchTv(keyword)\n  );\n\n  const {\n    data: detailData,\n    isLoading: detailLoading,\n    refetch,\n  } = useQuery<IGetMovieDetailResult>(\n    [\"movies\", bigMovieMatch?.params.movieId],\n    async () => bigMovieMatch && getMovieDetail(bigMovieMatch?.params.movieId),\n    {\n      enabled: false,\n      refetchOnWindowFocus: false,\n    }\n  );\n\n  useEffect(() => {\n    if (bigMovieMatch?.params.movieId) {\n      refetch();\n    }\n  }, [bigMovieMatch?.params.movieId, refetch]);\n\n  const [index, setIndex] = useState(0);\n  const [topIndex, setTopIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const [back, setBack] = useState(false);\n  const setDetail = useSetRecoilState(isDetail);\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n\n  const increaseIndex = () => {\n    if (movieData) {\n      if (leaving) return;\n      setBack(false);\n      toggleLeaving();\n      const totalMovies = movieData.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n\n  const increaseTopIndex = () => {\n    if (tvData) {\n      if (leaving) return;\n      setBack(false);\n      toggleLeaving();\n      const totalMovies = tvData.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setTopIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n\n  const onBoxClicked = (movieId: number) => {\n    history.push(`/maxflix-remaster/movies/${movieId}`);\n    setTimeout(() => setDetail(true), 500); // setDetail 실행 시 애니메이션 효과가 이상해짐\n  };\n\n  const onOverlayClick = () => {\n    history.push(route.home);\n    setDetail(false);\n  };\n\n  console.log(movieData);\n  return (\n    <Wrapper>\n      {movieLoading && tvLoading ? (\n        <Loader>Loading...</Loader>\n      ) : movieData || tvData ? (\n        <>\n          {movieData && movieData.total_results > 0 && (\n            <>\n              <Banner\n                bgPhoto={makeImagePath(\n                  movieData?.results[0].backdrop_path || \"\"\n                )}\n              >\n                <Title>{movieData?.results[0].title}</Title>\n                <OverView>{movieData?.results[0].overview}</OverView>\n              </Banner>\n              <Slider>\n                <SliderTitle>{keyword} 영화</SliderTitle>\n\n                <AnimatePresence onExitComplete={toggleLeaving} initial={false}>\n                  <Row\n                    custom={back}\n                    variants={rowVariants}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    exit=\"exit\"\n                    transition={{ type: \"tween\", duration: 1 }}\n                    key={index}\n                  >\n                    {movieData?.results\n                      .slice(offset * index, offset * index + offset)\n                      .map((movie) => (\n                        <Box\n                          layoutId={movie.id + \"\"}\n                          key={movie.id}\n                          variants={boxVariants}\n                          whileHover=\"hover\"\n                          initial=\"normal\"\n                          transition={{ type: \"tween\" }}\n                          onClick={() => onBoxClicked(movie.id)}\n                        >\n                          <MovieImg\n                            variants={movieImgVariants}\n                            src={makeImagePath(movie.backdrop_path, \"w500\")}\n                          />\n\n                          <Info variants={infoVariants}>\n                            <MovieTitle>{movie.title}</MovieTitle>\n                            <MovieVote>\n                              <FontAwesomeIcon\n                                icon={[\"fas\", \"star\"]}\n                                size=\"xs\"\n                                color=\"orange\"\n                              />\n                              <div>{movie.vote_average}</div>\n                            </MovieVote>\n                          </Info>\n                        </Box>\n                      ))}\n                  </Row>\n                </AnimatePresence>\n                <Next whileHover={{ opacity: 1 }} onClick={increaseIndex}>\n                  <FontAwesomeIcon icon={[\"fas\", \"chevron-right\"]} size=\"2x\" />\n                </Next>\n              </Slider>\n            </>\n          )}\n          {tvData && tvData.total_results > 0 && (\n            <>\n              <Slider>\n                <SliderTitle>{keyword} TV 시리즈</SliderTitle>\n                <AnimatePresence onExitComplete={toggleLeaving} initial={false}>\n                  <Row\n                    custom={back}\n                    variants={rowVariants}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    exit=\"exit\"\n                    transition={{ type: \"tween\", duration: 1 }}\n                    key={topIndex}\n                  >\n                    {tvData?.results\n                      .slice(offset * topIndex, offset * topIndex + offset)\n                      .map((movie) => (\n                        <Box\n                          layoutId={movie.id + \"\"}\n                          key={movie.id}\n                          variants={boxVariants}\n                          whileHover=\"hover\"\n                          initial=\"normal\"\n                          transition={{ type: \"tween\" }}\n                          onClick={() => onBoxClicked(movie.id)}\n                        >\n                          <MovieImg\n                            variants={movieImgVariants}\n                            src={\n                              movie.backdrop_path\n                                ? makeImagePath(movie.backdrop_path, \"w500\")\n                                : DEFAULT_IMG\n                            }\n                          />\n\n                          <Info variants={infoVariants}>\n                            <MovieTitle>{movie.name}</MovieTitle>\n                            <MovieVote>\n                              <FontAwesomeIcon\n                                icon={[\"fas\", \"star\"]}\n                                size=\"xs\"\n                                color=\"orange\"\n                              />\n                              <div>{movie.vote_average}</div>\n                            </MovieVote>\n                          </Info>\n                        </Box>\n                      ))}\n                  </Row>\n                </AnimatePresence>\n                <Next whileHover={{ opacity: 1 }} onClick={increaseTopIndex}>\n                  <FontAwesomeIcon icon={[\"fas\", \"chevron-right\"]} size=\"2x\" />\n                </Next>\n              </Slider>\n            </>\n          )}\n\n          <AnimatePresence>\n            {detailLoading ? (\n              <Loader>Loading...</Loader>\n            ) : (\n              bigMovieMatch && (\n                <>\n                  <Overlay\n                    onClick={onOverlayClick}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                  />\n                  <BigMovieDetail\n                    style={{ top: scrollY.get() + 50 }}\n                    layoutId={bigMovieMatch.params.movieId}\n                  >\n                    {detailData && (\n                      <>\n                        <BigCover\n                          style={{\n                            backgroundImage: `linear-gradient(transparent, black), url(${\n                              detailData.backdrop_path\n                                ? makeImagePath(detailData.backdrop_path)\n                                : DEFAULT_IMG\n                            })`,\n                          }}\n                        ></BigCover>\n                        <DetailInfo>\n                          <DetailHeader>\n                            <DetailTitle>{detailData.title}</DetailTitle>\n                            <Tagline>{detailData.tagline}</Tagline>\n                          </DetailHeader>\n                          <DetailBody tagline={Boolean(detailData.tagline)}>\n                            <DetailPoster\n                              style={{\n                                backgroundImage: `url(${makeImagePath(\n                                  detailData.poster_path\n                                )})`,\n                              }}\n                            />\n                            <DetailSection>\n                              <div>{detailData.overview}</div>\n                              <a\n                                href={`${detailData.homepage}`}\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                              >\n                                {detailData.homepage}\n                              </a>\n                              <div>\n                                장르 :{\" \"}\n                                {detailData.genres.map((genre) => (\n                                  <span>{genre.name} </span>\n                                ))}\n                              </div>\n                              <div>개봉 일자 : {detailData.release_date}</div>\n                              <div>상영 시간 : {detailData.runtime} 분</div>\n                              <div>개봉 여부 : {detailData.status}</div>\n                            </DetailSection>\n                          </DetailBody>\n                        </DetailInfo>\n                      </>\n                    )}\n                  </BigMovieDetail>\n                </>\n              )\n            )}\n          </AnimatePresence>\n        </>\n      ) : (\n        <>\n          {console.log(\"123\")}\n          <div>검색 결과를 찾을 수 없습니다</div>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n","import { useInfiniteQuery, useQuery } from \"react-query\";\nimport {\n  getMovies,\n  IGetMovieResult,\n  getMovieDetail,\n  IGetMovieDetailResult,\n} from \"../api\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { makeImagePath } from \"../utils\";\nimport { useState, useEffect, KeyboardEvent } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { route } from \"../Route\";\nimport { useSetRecoilState } from \"recoil\";\nimport { isDetail } from \"../atom\";\nimport { getTopRatedMovies, DEFAULT_IMG } from \"../api\";\n\nconst Wrapper = styled.div`\n  background-color: black;\n`;\n\nconst Loader = styled(motion.div)`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 4rem;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 5rem;\n  margin-bottom: 2rem;\n`;\n\nconst OverView = styled.p`\n  font-size: 1.5rem;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: -9.3rem;\n  margin-bottom: 15rem;\n`;\n\nconst SliderTitle = styled.div`\n  margin-bottom: 2rem;\n  margin-left: 4rem;\n  font-size: 1.5rem;\n`;\n\nconst Prev = styled(motion.div)`\n  height: 80%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0.3;\n  position: absolute;\n  z-index: 10;\n  left: 1rem;\n  top: 7rem;\n`;\n\nconst Next = styled(motion.div)`\n  height: 80%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0.3;\n  position: absolute;\n  right: 1rem;\n  top: 7rem;\n  background-color: rgba(0, 0, 0, 1);\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 0.5rem;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n  padding: 0 4rem;\n`;\n\nconst Box = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst MovieImg = styled(motion.img)`\n  border-radius: 0.5rem;\n  width: 100%;\n`;\n\nconst Info = styled(motion.div)`\n  background-color: ${(props) => props.theme.black.darker};\n  opacity: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  box-shadow: 0px 2px 25px rgba(0, 0, 0, 0.5);\n  border-bottom-left-radius: 0.5rem;\n  border-bottom-right-radius: 0.5rem;\n  padding: 1rem;\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovieDetail = styled(motion.div)`\n  position: absolute;\n  border-radius: 1rem;\n  overflow: auto;\n  width: 40vw;\n  height: 90vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  height: 35%;\n  background-size: cover;\n  background-position: center center;\n`;\n\nconst DetailInfo = styled.div`\n  color: ${(props) => props.theme.white.lighter};\n  position: relative;\n  top: -5.5rem;\n  padding: 1.5rem 1.5rem 0 1.5rem;\n  height: 65%;\n`;\n\nconst DetailHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n\nconst DetailTitle = styled.h3`\n  font-size: 2rem;\n  width: 60%;\n`;\n\nconst Tagline = styled.div`\n  width: 40%;\n`;\nconst DetailBody = styled.div<{ tagline: boolean }>`\n  padding-top: ${(props) => (props.tagline ? \"1.5rem\" : \"2rem\")};\n  display: grid;\n  height: 100%;\n  grid-template-columns: repeat(2, 1fr);\n`;\n\nconst DetailPoster = styled.div`\n  border-radius: 1rem;\n  height: 30rem;\n  background-position: center;\n  background-size: cover;\n`;\n\nconst DetailSection = styled.div`\n  padding: 1.5rem;\n`;\n\nconst MovieTitle = styled.div``;\nconst MovieVote = styled.div`\n  width: 3rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst rowVariants = {\n  hidden: (back: boolean) => ({\n    x: back ? -window.innerWidth : window.innerWidth,\n  }),\n  visible: {\n    x: 0,\n  },\n  exit: (back: boolean) => ({\n    x: back ? window.innerWidth : -window.innerWidth,\n  }),\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.5,\n    y: -50,\n    transition: {\n      delay: 0.3,\n      duration: 0.2,\n      type: \"tween\",\n    },\n  },\n};\n\nconst movieImgVariants = {\n  hover: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    transition: {\n      delay: 0.3,\n      duration: 0.2,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.3,\n      duration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst offset = 6;\n\nexport const Movies = () => {\n  const history = useHistory();\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(route.movieDetail);\n  const { scrollY } = useViewportScroll();\n  const { data, isLoading, hasNextPage, fetchNextPage } =\n    useInfiniteQuery<IGetMovieResult>([\"movies\", \"nowPlaying\"], getMovies, {\n      getNextPageParam: (currentPage) => {\n        const nextPage = currentPage.page + 1;\n        return nextPage > currentPage.total_pages ? null : nextPage;\n      },\n    });\n\n  const {\n    data: topData,\n    isLoading: topLoading,\n    hasNextPage: topHasNextPage,\n    fetchNextPage: topFetchNextPage,\n  } = useInfiniteQuery<IGetMovieResult>(\n    [\"movies\", \"topRated\"],\n    getTopRatedMovies,\n    {\n      getNextPageParam: (currentPage) => {\n        const nextPage = currentPage.page + 1;\n        return nextPage > currentPage.total_pages ? null : nextPage;\n      },\n    }\n  );\n\n  const {\n    data: detailData,\n    isLoading: detailLoading,\n    refetch,\n  } = useQuery<IGetMovieDetailResult>(\n    [\"movies\", bigMovieMatch?.params.movieId],\n    async () => bigMovieMatch && getMovieDetail(bigMovieMatch?.params.movieId),\n    {\n      enabled: false,\n      refetchOnWindowFocus: false,\n    }\n  );\n\n  useEffect(() => {\n    if (bigMovieMatch?.params.movieId) {\n      refetch();\n    }\n  }, [bigMovieMatch?.params.movieId, refetch]);\n\n  const [index, setIndex] = useState(0);\n  const [topIndex, setTopIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const [back, setBack] = useState(false);\n  const setDetail = useSetRecoilState(isDetail);\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n\n  const increaseIndex = () => {\n    if (data) {\n      if (leaving) return;\n      setBack(false);\n      toggleLeaving();\n      const totalMovies =\n        data.pages.map((page) => page.results).flat().length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n      if (index === maxIndex - 1) {\n        if (hasNextPage) {\n          fetchNextPage();\n        }\n      }\n    }\n  };\n\n  const increaseTopIndex = () => {\n    if (topData) {\n      if (leaving) return;\n      setBack(false);\n      toggleLeaving();\n      const totalMovies =\n        topData.pages.map((page) => page.results).flat().length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setTopIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n      if (topIndex === maxIndex - 1) {\n        if (topHasNextPage) {\n          topFetchNextPage();\n        }\n      }\n    }\n  };\n\n  const decreaseIndex = () => {\n    if (data) {\n      if (leaving) return;\n      setBack(true);\n      toggleLeaving();\n      const totalMovies =\n        data.pages.map((page) => page.results).flat().length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1; // 3\n      setIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\n    }\n  };\n\n  const decreaseTopIndex = () => {\n    if (topData) {\n      if (leaving) return;\n      setBack(true);\n      toggleLeaving();\n      const totalMovies =\n        topData.pages.map((page) => page.results).flat().length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1; // 3\n      setTopIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\n    }\n  };\n\n  const onBoxClicked = (movieId: number) => {\n    history.push(`/maxflix-remaster/movies/${movieId}`);\n    setTimeout(() => setDetail(true), 500); // setDetail 실행 시 애니메이션 효과가 이상해짐\n  };\n\n  const onOverlayClick = () => {\n    history.push(route.home);\n    setDetail(false);\n  };\n\n  return (\n    <Wrapper>\n      {isLoading && topLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            bgPhoto={makeImagePath(\n              data?.pages.map((page) => page.results).flat()[0].backdrop_path ||\n                DEFAULT_IMG\n            )}\n          >\n            <Title>\n              {data?.pages.map((page) => page.results).flat()[0].title}\n            </Title>\n            <OverView>\n              {data?.pages.map((page) => page.results).flat()[0].overview}\n            </OverView>\n          </Banner>\n          <Slider>\n            <SliderTitle>상영 중인 영화</SliderTitle>\n            <Prev whileHover={{ opacity: 1 }} onClick={decreaseIndex}>\n              <FontAwesomeIcon icon={[\"fas\", \"chevron-left\"]} size=\"2x\" />\n            </Prev>\n            <AnimatePresence\n              custom={back}\n              onExitComplete={toggleLeaving}\n              initial={false}\n            >\n              <Row\n                custom={back}\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ ease: \"easeInOut\", duration: 1 }}\n                key={index}\n              >\n                {data?.pages\n                  .map((page) => page.results)\n                  .flat()\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + \"\"}\n                      key={movie.id}\n                      variants={boxVariants}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      transition={{ ease: \"easeInOut\" }}\n                      onClick={() => onBoxClicked(movie.id)}\n                    >\n                      <MovieImg\n                        variants={movieImgVariants}\n                        src={\n                          movie.backdrop_path\n                            ? makeImagePath(movie.backdrop_path, \"w500\")\n                            : DEFAULT_IMG\n                        }\n                      />\n\n                      <Info variants={infoVariants}>\n                        <MovieTitle>{movie.title}</MovieTitle>\n                        <MovieVote>\n                          <FontAwesomeIcon\n                            icon={[\"fas\", \"star\"]}\n                            size=\"xs\"\n                            color=\"orange\"\n                          />\n                          <div>{movie.vote_average}</div>\n                        </MovieVote>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <Next whileHover={{ opacity: 1 }} onClick={increaseIndex}>\n              <FontAwesomeIcon icon={[\"fas\", \"chevron-right\"]} size=\"2x\" />\n            </Next>\n          </Slider>\n\n          <Slider>\n            <SliderTitle>평점 높은 순</SliderTitle>\n            <Prev whileHover={{ opacity: 1 }} onClick={decreaseTopIndex}>\n              <FontAwesomeIcon icon={[\"fas\", \"chevron-left\"]} size=\"2x\" />\n            </Prev>\n            <AnimatePresence\n              custom={back}\n              onExitComplete={toggleLeaving}\n              initial={false}\n            >\n              <Row\n                custom={back}\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={topIndex}\n              >\n                {topData?.pages\n                  .map((page) => page.results)\n                  .flat()\n                  .slice(offset * topIndex, offset * topIndex + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + \"\"}\n                      key={movie.id}\n                      variants={boxVariants}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      transition={{ type: \"tween\" }}\n                      onClick={() => onBoxClicked(movie.id)}\n                    >\n                      <MovieImg\n                        variants={movieImgVariants}\n                        src={\n                          movie.backdrop_path\n                            ? makeImagePath(movie.backdrop_path, \"w500\")\n                            : DEFAULT_IMG\n                        }\n                      />\n\n                      <Info variants={infoVariants}>\n                        <MovieTitle>{movie.title}</MovieTitle>\n                        <MovieVote>\n                          <FontAwesomeIcon\n                            icon={[\"fas\", \"star\"]}\n                            size=\"xs\"\n                            color=\"orange\"\n                          />\n                          <div>{movie.vote_average}</div>\n                        </MovieVote>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            <Next whileHover={{ opacity: 1 }} onClick={increaseTopIndex}>\n              <FontAwesomeIcon icon={[\"fas\", \"chevron-right\"]} size=\"2x\" />\n            </Next>\n          </Slider>\n\n          <AnimatePresence>\n            {detailLoading ? (\n              <Loader>Loading...</Loader>\n            ) : (\n              bigMovieMatch && (\n                <>\n                  <Overlay\n                    onClick={onOverlayClick}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                  />\n                  <BigMovieDetail\n                    style={{ top: scrollY.get() + 50 }}\n                    layoutId={bigMovieMatch.params.movieId}\n                  >\n                    {detailData && (\n                      <>\n                        <BigCover\n                          style={{\n                            backgroundImage: `linear-gradient(transparent, black), url(${\n                              detailData.backdrop_path\n                                ? makeImagePath(detailData.backdrop_path)\n                                : DEFAULT_IMG\n                            })`,\n                          }}\n                        ></BigCover>\n                        <DetailInfo>\n                          <DetailHeader>\n                            <DetailTitle>{detailData.title}</DetailTitle>\n                            <Tagline>{detailData.tagline}</Tagline>\n                          </DetailHeader>\n                          <DetailBody tagline={Boolean(detailData.tagline)}>\n                            <DetailPoster\n                              style={{\n                                backgroundImage: `url(${makeImagePath(\n                                  detailData.poster_path\n                                )})`,\n                              }}\n                            />\n                            <DetailSection>\n                              <div>{detailData.overview}</div>\n                              <a\n                                href={`${detailData.homepage}`}\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                              >\n                                {detailData.homepage}\n                              </a>\n                              <div>\n                                장르 :{\" \"}\n                                {detailData.genres.map((genre) => (\n                                  <span>{genre.name} </span>\n                                ))}\n                              </div>\n                              <div>개봉 일자 : {detailData.release_date}</div>\n                              <div>상영 시간 : {detailData.runtime} 분</div>\n                              <div>개봉 여부 : {detailData.status}</div>\n                            </DetailSection>\n                          </DetailBody>\n                        </DetailInfo>\n                      </>\n                    )}\n                  </BigMovieDetail>\n                </>\n              )\n            )}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n","import styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  AnimatePresence,\n  motion,\n  useAnimation,\n  useViewportScroll,\n} from \"framer-motion\";\nimport { Link, useRouteMatch, useHistory } from \"react-router-dom\";\nimport { route } from \"../Route\";\nimport { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { GlobalSearchClose } from \"../atom\";\n\nconst Nav = styled(motion.nav)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  font-size: 1rem;\n  padding: 1.5rem 4rem;\n  color: white;\n  background-image: linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0));\n`;\n\nconst Column = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Logo = styled(motion.svg)`\n  margin-right: 3rem;\n  width: 5.7rem;\n  height: 1.6rem;\n  fill: ${(props) => props.theme.red};\n  path {\n    stroke-width: 0.5rem;\n    stroke: white;\n  }\n`;\n\nconst Items = styled.ul`\n  display: flex;\n  align-items: center;\n`;\n\nconst Item = styled.li`\n  margin-right: 20px;\n  color: ${(props) => props.theme.white.darker};\n  transition: color 0.3s ease-in-out;\n  position: relative;\n  &:hover {\n    color: ${(props) => props.theme.white.lighter};\n  }\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Search = styled.form`\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  svg {\n    height: 25px;\n  }\n`;\n\nconst Circle = styled(motion.span)`\n  position: absolute;\n  width: 0.4rem;\n  height: 0.4rem;\n  border-radius: 50%;\n  bottom: -0.8rem;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.red};\n`;\n\nconst Input = styled(motion.input)`\n  transform-origin: right center;\n  width: 16.5rem;\n  position: absolute;\n  right: 0;\n  padding: 0.7rem 1rem;\n  padding-left: 3rem;\n  z-index: -1;\n  color: white;\n  background-color: transparent;\n  border: 1px solid ${(props) => props.theme.white.lighter};\n  outline: none;\n  background-color: black;\n`;\n\nconst logoVariants = {\n  normal: {\n    fill: \"rgba(255, 255, 255, 0)\",\n  },\n  active: {\n    fill: \"rgb(229, 16, 19)\",\n    pathLength: [0, 1, 0],\n  },\n};\n\nconst navVariants = {\n  top: {\n    backgroundColor: \"rgba(0,0,0,0)\",\n  },\n  scroll: {\n    backgroundColor: \"rgba(0,0,0,1)\",\n  },\n};\n\ninterface IForm {\n  keyword: string;\n}\n\nexport const Header = () => {\n  const [searchOpen, setSearchOpen] = useState(false);\n  const [globalSearchClose, setGlobalSearchClose] =\n    useRecoilState(GlobalSearchClose);\n  const homeMatch = useRouteMatch(route.home);\n  const tvMatch = useRouteMatch(route.tv);\n  const inputAnimation = useAnimation();\n  const navAnimation = useAnimation();\n  const { scrollY } = useViewportScroll();\n  const { register, setValue, handleSubmit, setFocus } = useForm<IForm>();\n  const toggleSearch = () => {\n    if (searchOpen) {\n      inputAnimation.start({\n        scaleX: 0,\n      });\n    } else if (!searchOpen) {\n      setGlobalSearchClose(false);\n      inputAnimation.start({\n        scaleX: 1,\n      });\n      setFocus(\"keyword\");\n    }\n    setSearchOpen((prev) => !prev);\n  };\n\n  useEffect(() => {\n    if (globalSearchClose) {\n      inputAnimation.start({\n        scaleX: 0,\n      });\n      setSearchOpen(false);\n    }\n  }, [globalSearchClose, inputAnimation]);\n\n  useEffect(() => {\n    scrollY.onChange(() => {\n      if (scrollY.get() > 80) {\n        navAnimation.start(\"scroll\");\n      } else {\n        navAnimation.start(\"top\");\n      }\n    });\n  }, [scrollY, navAnimation]);\n\n  const history = useHistory();\n\n  const onValid = (data: IForm) => {\n    const { keyword } = data;\n    history.push(`/maxflix-remaster/search?keyword=${keyword}`);\n    setValue(\"keyword\", \"\");\n  };\n\n  return (\n    <Nav variants={navVariants} animate={navAnimation} initial=\"top\">\n      <Column>\n        <Link to={route.home}>\n          <Logo\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"1024\"\n            height=\"276.742\"\n            viewBox=\"0 0 1024 276.742\"\n          >\n            <motion.path\n              variants={logoVariants}\n              initial=\"normal\"\n              animate=\"active\"\n              transition={{\n                default: { duration: 3 },\n                fill: { duration: 1, delay: 0.5 },\n              }}\n              d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\"\n            />\n          </Logo>\n        </Link>\n        <Items>\n          <Item>\n            <AnimatePresence>\n              <Link to={route.home}>\n                Home {homeMatch?.isExact && <Circle layoutId=\"circle\" />}\n              </Link>\n            </AnimatePresence>\n          </Item>\n          <Item>\n            <AnimatePresence>\n              <Link to={route.tv}>\n                TV Shows {tvMatch && <Circle layoutId=\"circle\" />}\n              </Link>\n            </AnimatePresence>\n          </Item>\n        </Items>\n      </Column>\n      <Column>\n        <Search onSubmit={handleSubmit(onValid)}>\n          <motion.svg\n            onClick={toggleSearch}\n            animate={{ x: searchOpen ? -225 : 0 }}\n            transition={{ type: \"linear\" }}\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n              clipRule=\"evenodd\"\n            ></path>\n          </motion.svg>\n          <Input\n            {...register(\"keyword\", {\n              required: \"검색어가 필요합니다\",\n              minLength: { value: 2, message: \"두 글자 이상 입력하세요\" },\n            })}\n            animate={inputAnimation}\n            initial={{ scaleX: 0 }}\n            transition={{ type: \"linear\" }}\n            placeholder=\"영화 또는 TV 프로그램을 검색하세요\"\n          />\n        </Search>\n      </Column>\n    </Nav>\n  );\n};\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle<{ detail: boolean }>`\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Poor Story', 'Source Sans Pro', sans-serif;\n  color:${(props) => props.theme.white.darker};\n  line-height: 1.2;\n  background-color: black;\n  overflow: ${(props) => (props.detail ? \"hidden\" : \"visible\")};\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { route } from \"./Route\";\nimport { Tv } from \"./Routes/Tv\";\nimport { Search } from \"./Routes/Search\";\nimport { Movies } from \"./Routes/Movies\";\nimport { Header } from \"./Components/Header\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { isDetail, GlobalSearchClose } from \"./atom\";\nimport styled from \"styled-components\";\n\nlibrary.add(fas);\n\nconst Container = styled.div``;\n\nfunction App() {\n  const detail = useRecoilValue(isDetail);\n  const setCloseSearch = useSetRecoilState(GlobalSearchClose);\n\n  const closeSearch = () => {\n    setCloseSearch(true);\n  };\n  return (\n    <>\n      <GlobalStyle detail={detail} />\n      <Router>\n        <Header />\n        <Container onClick={closeSearch}>\n          <Switch>\n            <Route path={[route.tv, route.tvDetail]}>\n              <Tv />\n            </Route>\n            <Route path={[route.search, route.searchDetail]}>\n              <Search />\n            </Route>\n            <Route path={[route.home, route.movieDetail]}>\n              <Movies />\n            </Route>\n          </Switch>\n        </Container>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { theme } from \"./theme\";\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  red: \"#E51013\",\n  black: {\n    veryDark: \"#141414\",\n    darker: \"#181818\",\n    lighter: \"#2f2f2f\",\n  },\n  white: {\n    lighter: \"#fff\",\n    darker: \"#e5e5e5\",\n  },\n};\n"],"sourceRoot":""}